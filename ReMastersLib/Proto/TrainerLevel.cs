// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/TrainerLevel.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/TrainerLevel.proto</summary>
  public static partial class TrainerLevelReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/TrainerLevel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TrainerLevelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhQcm90by9UcmFpbmVyTGV2ZWwucHJvdG8SDFJlTWFzdGVyc0xpYiJlCgxU",
            "cmFpbmVyTGV2ZWwSDQoFbGV2ZWwYASABKA0SCgoCdTIYAiABKA0SCgoCdTMY",
            "AyABKA0SCgoCdTQYBCABKA0SCgoCdTUYBSABKA0SCgoCdTYYBiABKA0SCgoC",
            "dTcYByABKA0iQAoRVHJhaW5lckxldmVsVGFibGUSKwoHZW50cmllcxgBIAMo",
            "CzIaLlJlTWFzdGVyc0xpYi5UcmFpbmVyTGV2ZWxiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.TrainerLevel), global::ReMastersLib.TrainerLevel.Parser, new[]{ "Level", "U2", "U3", "U4", "U5", "U6", "U7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.TrainerLevelTable), global::ReMastersLib.TrainerLevelTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TrainerLevel : pb::IMessage<TrainerLevel> {
    private static readonly pb::MessageParser<TrainerLevel> _parser = new pb::MessageParser<TrainerLevel>(() => new TrainerLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainerLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.TrainerLevelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainerLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainerLevel(TrainerLevel other) : this() {
      level_ = other.level_;
      u2_ = other.u2_;
      u3_ = other.u3_;
      u4_ = other.u4_;
      u5_ = other.u5_;
      u6_ = other.u6_;
      u7_ = other.u7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainerLevel Clone() {
      return new TrainerLevel(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "u2" field.</summary>
    public const int U2FieldNumber = 2;
    private uint u2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint U2 {
      get { return u2_; }
      set {
        u2_ = value;
      }
    }

    /// <summary>Field number for the "u3" field.</summary>
    public const int U3FieldNumber = 3;
    private uint u3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint U3 {
      get { return u3_; }
      set {
        u3_ = value;
      }
    }

    /// <summary>Field number for the "u4" field.</summary>
    public const int U4FieldNumber = 4;
    private uint u4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint U4 {
      get { return u4_; }
      set {
        u4_ = value;
      }
    }

    /// <summary>Field number for the "u5" field.</summary>
    public const int U5FieldNumber = 5;
    private uint u5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint U5 {
      get { return u5_; }
      set {
        u5_ = value;
      }
    }

    /// <summary>Field number for the "u6" field.</summary>
    public const int U6FieldNumber = 6;
    private uint u6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint U6 {
      get { return u6_; }
      set {
        u6_ = value;
      }
    }

    /// <summary>Field number for the "u7" field.</summary>
    public const int U7FieldNumber = 7;
    private uint u7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint U7 {
      get { return u7_; }
      set {
        u7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainerLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainerLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (U2 != other.U2) return false;
      if (U3 != other.U3) return false;
      if (U4 != other.U4) return false;
      if (U5 != other.U5) return false;
      if (U6 != other.U6) return false;
      if (U7 != other.U7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != 0) hash ^= Level.GetHashCode();
      if (U2 != 0) hash ^= U2.GetHashCode();
      if (U3 != 0) hash ^= U3.GetHashCode();
      if (U4 != 0) hash ^= U4.GetHashCode();
      if (U5 != 0) hash ^= U5.GetHashCode();
      if (U6 != 0) hash ^= U6.GetHashCode();
      if (U7 != 0) hash ^= U7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Level);
      }
      if (U2 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(U2);
      }
      if (U3 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(U3);
      }
      if (U4 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(U4);
      }
      if (U5 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(U5);
      }
      if (U6 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(U6);
      }
      if (U7 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(U7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (U2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(U2);
      }
      if (U3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(U3);
      }
      if (U4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(U4);
      }
      if (U5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(U5);
      }
      if (U6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(U6);
      }
      if (U7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(U7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainerLevel other) {
      if (other == null) {
        return;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.U2 != 0) {
        U2 = other.U2;
      }
      if (other.U3 != 0) {
        U3 = other.U3;
      }
      if (other.U4 != 0) {
        U4 = other.U4;
      }
      if (other.U5 != 0) {
        U5 = other.U5;
      }
      if (other.U6 != 0) {
        U6 = other.U6;
      }
      if (other.U7 != 0) {
        U7 = other.U7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = input.ReadUInt32();
            break;
          }
          case 16: {
            U2 = input.ReadUInt32();
            break;
          }
          case 24: {
            U3 = input.ReadUInt32();
            break;
          }
          case 32: {
            U4 = input.ReadUInt32();
            break;
          }
          case 40: {
            U5 = input.ReadUInt32();
            break;
          }
          case 48: {
            U6 = input.ReadUInt32();
            break;
          }
          case 56: {
            U7 = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TrainerLevelTable : pb::IMessage<TrainerLevelTable> {
    private static readonly pb::MessageParser<TrainerLevelTable> _parser = new pb::MessageParser<TrainerLevelTable>(() => new TrainerLevelTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainerLevelTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.TrainerLevelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainerLevelTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainerLevelTable(TrainerLevelTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainerLevelTable Clone() {
      return new TrainerLevelTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.TrainerLevel> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.TrainerLevel.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.TrainerLevel> entries_ = new pbc::RepeatedField<global::ReMastersLib.TrainerLevel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.TrainerLevel> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainerLevelTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainerLevelTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainerLevelTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
