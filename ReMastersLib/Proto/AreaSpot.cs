// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/AreaSpot.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/AreaSpot.proto</summary>
  public static partial class AreaSpotReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/AreaSpot.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AreaSpotReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRQcm90by9BcmVhU3BvdC5wcm90bxIMUmVNYXN0ZXJzTGliImwKCEFyZWFT",
            "cG90EgoKAnUxGAEgASgNEgoKAnUyGAIgASgNEgwKBG5hbWUYAyABKAkSCgoC",
            "dTQYBCABKAkSCgoCdTUYBSABKAkSDwoHdGV4X2JpZxgGIAEoCRIRCgl0ZXhf",
            "c21hbGwYByABKAkiOAoNQXJlYVNwb3RUYWJsZRInCgdlbnRyaWVzGAEgAygL",
            "MhYuUmVNYXN0ZXJzTGliLkFyZWFTcG90YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.AreaSpot), global::ReMastersLib.AreaSpot.Parser, new[]{ "U1", "U2", "Name", "U4", "U5", "TexBig", "TexSmall" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.AreaSpotTable), global::ReMastersLib.AreaSpotTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AreaSpot : pb::IMessage<AreaSpot> {
    private static readonly pb::MessageParser<AreaSpot> _parser = new pb::MessageParser<AreaSpot>(() => new AreaSpot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AreaSpot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.AreaSpotReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaSpot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaSpot(AreaSpot other) : this() {
      u1_ = other.u1_;
      u2_ = other.u2_;
      name_ = other.name_;
      u4_ = other.u4_;
      u5_ = other.u5_;
      texBig_ = other.texBig_;
      texSmall_ = other.texSmall_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaSpot Clone() {
      return new AreaSpot(this);
    }

    /// <summary>Field number for the "u1" field.</summary>
    public const int U1FieldNumber = 1;
    private uint u1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint U1 {
      get { return u1_; }
      set {
        u1_ = value;
      }
    }

    /// <summary>Field number for the "u2" field.</summary>
    public const int U2FieldNumber = 2;
    private uint u2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint U2 {
      get { return u2_; }
      set {
        u2_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "u4" field.</summary>
    public const int U4FieldNumber = 4;
    private string u4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string U4 {
      get { return u4_; }
      set {
        u4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "u5" field.</summary>
    public const int U5FieldNumber = 5;
    private string u5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string U5 {
      get { return u5_; }
      set {
        u5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tex_big" field.</summary>
    public const int TexBigFieldNumber = 6;
    private string texBig_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TexBig {
      get { return texBig_; }
      set {
        texBig_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tex_small" field.</summary>
    public const int TexSmallFieldNumber = 7;
    private string texSmall_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TexSmall {
      get { return texSmall_; }
      set {
        texSmall_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AreaSpot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AreaSpot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (U1 != other.U1) return false;
      if (U2 != other.U2) return false;
      if (Name != other.Name) return false;
      if (U4 != other.U4) return false;
      if (U5 != other.U5) return false;
      if (TexBig != other.TexBig) return false;
      if (TexSmall != other.TexSmall) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (U1 != 0) hash ^= U1.GetHashCode();
      if (U2 != 0) hash ^= U2.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (U4.Length != 0) hash ^= U4.GetHashCode();
      if (U5.Length != 0) hash ^= U5.GetHashCode();
      if (TexBig.Length != 0) hash ^= TexBig.GetHashCode();
      if (TexSmall.Length != 0) hash ^= TexSmall.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (U1 != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(U1);
      }
      if (U2 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(U2);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (U4.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(U4);
      }
      if (U5.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(U5);
      }
      if (TexBig.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TexBig);
      }
      if (TexSmall.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TexSmall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (U1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(U1);
      }
      if (U2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(U2);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (U4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(U4);
      }
      if (U5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(U5);
      }
      if (TexBig.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TexBig);
      }
      if (TexSmall.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TexSmall);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AreaSpot other) {
      if (other == null) {
        return;
      }
      if (other.U1 != 0) {
        U1 = other.U1;
      }
      if (other.U2 != 0) {
        U2 = other.U2;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.U4.Length != 0) {
        U4 = other.U4;
      }
      if (other.U5.Length != 0) {
        U5 = other.U5;
      }
      if (other.TexBig.Length != 0) {
        TexBig = other.TexBig;
      }
      if (other.TexSmall.Length != 0) {
        TexSmall = other.TexSmall;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            U1 = input.ReadUInt32();
            break;
          }
          case 16: {
            U2 = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            U4 = input.ReadString();
            break;
          }
          case 42: {
            U5 = input.ReadString();
            break;
          }
          case 50: {
            TexBig = input.ReadString();
            break;
          }
          case 58: {
            TexSmall = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AreaSpotTable : pb::IMessage<AreaSpotTable> {
    private static readonly pb::MessageParser<AreaSpotTable> _parser = new pb::MessageParser<AreaSpotTable>(() => new AreaSpotTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AreaSpotTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.AreaSpotReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaSpotTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaSpotTable(AreaSpotTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaSpotTable Clone() {
      return new AreaSpotTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.AreaSpot> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.AreaSpot.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.AreaSpot> entries_ = new pbc::RepeatedField<global::ReMastersLib.AreaSpot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.AreaSpot> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AreaSpotTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AreaSpotTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AreaSpotTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
